{"version":3,"file":"static/js/890.24990744.chunk.js","mappings":"4OAIe,SAASA,EAAT,GAAmC,IAAhBC,EAAe,EAAfA,YAChC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWE,OACI,6BAGA,kBAEIC,SAXW,SAACC,GACpBA,EAAMC,iBACNN,EAAYE,EACX,EAMG,WAIQ,mBAAQK,KAAK,SAAb,UAGI,wCAKV,kBAEEA,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SA/BW,SAAC,GAA2B,IAAfT,EAAc,EAAxBU,OAAUV,MAChCC,EAAUD,EACZ,EA8BUA,MAAOA,QAMlB,CCxCD,IAoDA,EApDe,WACd,OAAmCD,EAAAA,EAAAA,UAAS,IAA5C,eAAOY,EAAP,KAAmBC,EAAnB,KACA,GAAoCb,EAAAA,EAAAA,UAAS,IAA7C,eAAOc,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAiCf,OA1BAC,EAAAA,EAAAA,YAAU,WACNN,IAIJO,EAAAA,EAAAA,IAAgBP,GACdQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACLC,QAAQC,IAAIF,GACgB,IAAxBA,EAAKG,QAAQC,QAChBH,QAAQC,IAAI,wBAGbV,EAAcQ,EAAKG,QACnB,IACAE,OAAM,SAAAC,GAENL,QAAQC,IAAII,EACZ,IACAC,SAAQ,WAERN,QAAQC,IAAI,kBACZ,GACH,GAAE,CAACb,KAIJ,4BACA,SAACd,EAAD,CAAQC,YAjCc,SAACa,GACtBC,EAAaD,GACbY,QAAQC,IAAI,uBACZ,KA+BI,wBACKX,EAAWiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACvB,SAAC,KAAD,CAAeC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMpB,GAAnD,UACW,wBACGiB,KAFHD,EADY,QAUzB,C,uJCvDD,IAAMK,EAAW,gCACXC,EAAU,mCAGHC,EAAkB,WAC3B,OAAOC,MAAM,GAAD,OACLH,EADK,sCACiCC,GAEhD,EAEYnB,EAAkB,SAACP,GAC5B,OAAO4B,MAAM,GAAD,OACLH,EADK,gCAC2BC,EAD3B,kBAC4C1B,GAE3D,EAGY6B,EAAsB,SAACT,GAChC,OAAOQ,MAAM,GAAD,OACLH,EADK,iBACYL,EADZ,oBAC0BM,GAEzC,EAGYI,EAA2B,SAACV,GACrC,OAAOQ,MAAM,GAAD,OACLH,EADK,iBACYL,EADZ,4BACkCM,GAEjD,EAGYK,EAA2B,SAACX,GACrC,OAAOQ,MAAM,GAAD,OACLH,EADK,iBACYL,EADZ,4BACkCM,GAEjD,C","sources":["components/serchbar.jsx","Pages/Movies.jsx","services/services.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react'\n// import css from '../Searchbar/searchbar.module.css'\n\nexport default function Search ({ handleSerch }) {\n  const [value, setValue] = useState('');\n  \n  const handleChange = ({ target: { value } }) => {\n    setValue( value )\n\t}\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    handleSerch(value)\n    }\n \n    return (\n        <header\n            // className={css.Searchbar}\n        >\n        <form\n            // className={css.SearchForm}\n            onSubmit={handleSubmit}>\n          \n                <button type=\"submit\"\n                    // className={css.SearchForm_button}\n                >\n                    <span\n                        // className={css.SearchForm_button_label}\n                    >Search</span>\n          </button>\n\n          <input\n            // className={css.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n            onChange={handleChange}\n            value={value}\n          />\n        </form>\n      </header>\n    )\n  \n}\n\nSearch.propTypes = {\n  handleSerch: PropTypes.func,\n}","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getSerchingFilm } from '../services/services'\nimport Search from '../components/serchbar';\n\nconst Movies = () => {\n\tconst [searchText, setSerchText] = useState('');\n\tconst [filmsArray, setFilmsArray] = useState([]);\n\tconst location = useLocation();\n\n  \tconst handleSerch = (searchText) => {\n\t\tsetSerchText(searchText);\n\t\tconsole.log('Looking for an films');\n\t}\n\n  \tuseEffect(() => {\n\t\tif (!searchText) {\n\t\t\treturn\n\t\t}\n\t\t\t// setLoadingInProgress(true);\n\t\t\tgetSerchingFilm(searchText)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\tif (data.results.length === 0) {\n\t\t\t\t\t\tconsole.log('Sorry, nothing found')\n\t\t\t\t\t\t// Notiflix.Notify.warning('Sorry, nothing found')\n\t\t\t\t\t}\n\t\t\t\t\tsetFilmsArray(data.results);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\t// Notiflix.Notify.failure(`${error}`)\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\t// setLoadingInProgress(false)\n\t\t\t\t\tconsole.log('Search complete')\n\t\t\t\t})\n\t}, [searchText])\n\n\n  \treturn (\n\t<div>\n\t<Search handleSerch={handleSerch} />\n      <ul>\n          {filmsArray.map(({ id, title }) => (\n\t\t\t<Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n              <li>\n                {title}\n              </li>\n            </Link>\n          ))}\n        </ul>\n    </div>\n  \t);\n};\n\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c17d6d199e4f044ab21fca194914f42f';\n\n// https://api.themoviedb.org/3/movie/550?api_key=c17d6d199e4f044ab21fca194914f42f\nexport const getTrendingFilm = () => {\n    return fetch(\n        `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n};\n\nexport const getSerchingFilm = (searchText) => {\n    return fetch(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchText}`\n    );\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const getSerchingFilmById = (id) => {\n    return fetch(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const getSerchingFilmByCredits = (id) => {\n    return fetch(\n        `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport const getSerchingFilmByReviews = (id) => {\n    return fetch(\n        `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n};"],"names":["Search","handleSerch","useState","value","setValue","onSubmit","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","searchText","setSerchText","filmsArray","setFilmsArray","location","useLocation","useEffect","getSerchingFilm","then","response","json","data","console","log","results","length","catch","error","finally","map","id","title","to","state","from","BASE_URL","API_KEY","getTrendingFilm","fetch","getSerchingFilmById","getSerchingFilmByCredits","getSerchingFilmByReviews"],"sourceRoot":""}